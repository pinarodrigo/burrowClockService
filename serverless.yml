service: lambda--burrowclock-rest-api
custom:
  positionTableName: 'positions-${self:provider.stage}'
  poisTableName: 'pois-${self:provider.stage}'
  dynamodb:
    stages:
      - dev
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["PositionsDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["POISDynamoDBTable", "Arn" ] }
  environment:
    POSITIONS_TABLE: ${self:custom.positionTableName}
    POIS_TABLE: ${self:custom.poisTableName}
functions:
  burrowclock-app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
resources:
  Resources:
    PositionsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.positionTableName}
    POISDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: poiname
            AttributeType: S
        KeySchema:
          -
            AttributeName: poiname
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.poisTableName}
plugins:
  - serverless-dynamodb-local
  - serverless-offline